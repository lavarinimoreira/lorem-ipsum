{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Documents/React/exercices/lorem-ipsum/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport data from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    let amount = parseInt(count);\n    if (count <= 0) amount = 1;\n    if (count > 8) amount = 8;\n    setText(data.slice(0, amount));\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"tired of boring loren ipsum?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"lorem-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"paragraphs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        id: \"amount\",\n        value: count,\n        onChange: e => setCount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"lorem-text\",\n      children: text.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uaqNQJro0SNi64HXpTFoq2QUakw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","data","App","count","setCount","text","setText","handleSubmit","e","preventDefault","amount","parseInt","slice","target","value","map","item","index"],"sources":["/home/gabriel/Documents/React/exercices/lorem-ipsum/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport data from './data';\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState([]);\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let amount = parseInt(count);\n    if( count <= 0 ) amount = 1;\n    if( count > 8 ) amount = 8;\n    setText(data.slice( 0, amount ));\n  }\n\n  return (\n    <section className='section-center'>\n      <h3>tired of boring loren ipsum?</h3>\n      <form className='lorem-form' onSubmit={handleSubmit}>\n        <label htmlFor='amount'>\n          paragraphs:\n        </label>\n        <input \n          type='number'\n          name='amount'\n          id='amount'\n          value={count}\n          onChange={ ( e ) => setCount( e.target.value ) }\n        />\n        <button type='submit' className='btn'>generate</button>\n      </form>\n      <article className='lorem-text'>\n        {text.map((item, index) =>{\n          return <p key={index}>{item}</p>\n        })}\n      </article>\n    </section>\n    )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,MAAM,GAAGC,QAAQ,CAACR,KAAK,CAAC;IAC5B,IAAIA,KAAK,IAAI,CAAC,EAAGO,MAAM,GAAG,CAAC;IAC3B,IAAIP,KAAK,GAAG,CAAC,EAAGO,MAAM,GAAG,CAAC;IAC1BJ,OAAO,CAACL,IAAI,CAACW,KAAK,CAAE,CAAC,EAAEF,MAAM,CAAE,CAAC;EAClC,CAAC;EAED,oBACE;IAAS,SAAS,EAAC,gBAAgB;IAAA,wBACjC;MAAA,UAAI;IAA4B;MAAA;MAAA;MAAA;IAAA,QAAK,eACrC;MAAM,SAAS,EAAC,YAAY;MAAC,QAAQ,EAAEH,YAAa;MAAA,wBAClD;QAAO,OAAO,EAAC,QAAQ;QAAA,UAAC;MAExB;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QACE,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,QAAQ;QACb,EAAE,EAAC,QAAQ;QACX,KAAK,EAAEJ,KAAM;QACb,QAAQ,EAAKK,CAAC,IAAMJ,QAAQ,CAAEI,CAAC,CAACK,MAAM,CAACC,KAAK;MAAI;QAAA;QAAA;QAAA;MAAA,QAChD,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,KAAK;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAClD,eACP;MAAS,SAAS,EAAC,YAAY;MAAA,UAC5BT,IAAI,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;QACxB,oBAAO;UAAA,UAAgBD;QAAI,GAAZC,KAAK;UAAA;UAAA;UAAA;QAAA,QAAY;MAClC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACM;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEd;AAAC,GAnCQf,GAAG;AAAA,KAAHA,GAAG;AAqCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}